name: check-tf-version

on:
  workflow_dispatch:
    inputs:
      TERRAFORM_VERSION:
        description: 'Terraform version to use'
        required: false
        default: ''

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Set TERRAFORM_VERSION environment variable
        id: set-tf-ver
        run: |
          if [ -z "${{ github.event.inputs.TERRAFORM_VERSION }}" ]; then
            echo "TERRAFORM_VERSION not supplied. Fetching the latest version..."
            # Fetch the latest Terraform version from the HashiCorp API
            TERRAFORM_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)
          else
            TERRAFORM_VERSION="${{ github.event.inputs.TERRAFORM_VERSION }}"
          fi
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV

      - name: Print TERRAFORM_VERSION
        run: |
          echo "TERRAFORM_VERSION is set to $TERRAFORM_VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Container Image
        uses: docker/build-push-action@v6
        with:
          context: .
          build-args: TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}
          file: ./Dockerfile
          tags: custom-alpine-terraform:latest
          push: false

      - name: Check Availability of Docker Image
        run: |
          docker images

      - name: Start Docker Container
        run: |
          docker run -d --name alpine_container custom-alpine-terraform:latest tail -f /dev/null

      - name: Check Running Docker Containers
        run: |
          docker ps
      
      # - name: Check Terraform Version
      #   run: |
      #     docker exec alpine_container terraform --version
