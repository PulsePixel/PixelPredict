name: check-tf-version

on:
  workflow_dispatch:
    inputs:
      TERRAFORM_VERSION:
        description: 'Terraform version to use'
        required: false
        default: ''

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Set TERRAFORM_VERSION environment variable
        id: set-tf-ver
        run: |
          if [ -z "${{ github.event.inputs.TERRAFORM_VERSION }}" ]; then
            echo "TERRAFORM_VERSION not supplied. Fetching the latest version..."
            # Fetch the latest Terraform version from the HashiCorp API
            TERRAFORM_VERSION=$(curl -s https://checkpoint-api.hashicorp.com/v1/check/terraform | jq -r .current_version)
          else
            TERRAFORM_VERSION="${{ github.event.inputs.TERRAFORM_VERSION }}"
          fi
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV

      - name: Print TERRAFORM_VERSION
        run: |
          echo "TERRAFORM_VERSION is set to $TERRAFORM_VERSION"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Container Image
        uses: docker/build-push-action@v6
        with:
          build-args: TERRAFORM_VERSION=${{ env.TERRAFORM_VERSION }}
          file: Dockerfile
          tags: custom-alpine-terraform:latest
          push: false
          outputs: type=docker, dest=/tmp/custom-alpine-terraform.tar

      - name: List Docker Images
        run: |
          docker load --input /tmp/custom-alpine-terraform.tar
          docker image ls -a | grep custom-alpine-terraform

      - name: Inspect Built Docker Image
        run: |
          docker inspect custom-alpine-terraform:latest

      - name: Set Docker Image ID
        run: |
          IMAGE_ID=$(docker images -q custom-alpine-terraform:latest)
          echo "Image ID: $IMAGE_ID"
          echo "IMAGE_ID=$IMAGE_ID" >> $GITHUB_ENV

      - name: Run Docker Image
        run: |
          docker run --name terraform_alpine_container -d $IMAGE_ID tail -f /dev/null
        env:
          IMAGE_ID: ${{ env.IMAGE_ID }}

      - name: List Running Docker Containers
        run: |
          docker ps -a | grep terraform_alpine_container
      
      - name: Check Conatiner Terraform Version
        run: |
          docker exec alpine_container terraform --version
